name: Build and Deploy to GKE

on:
  push:
    branches: [ "master" ]
  pull_request:
    branches: [ "master" ]

env:
  PROJECT_ID: ${{ secrets.GKE_PROJECT_NEW }}
  SERVICE_ACCOUNT_KEY: ${{ secrets.GKE_SA_KEY }}
  GKE_CLUSTER: autopilot-cluster-1
  GKE_ZONE: us-central1
  DEPLOYMENT_NAME: core-wallet-service-deployment
  IMAGE: core-wallet-service-gke-image
  TAG: 1.0.4

jobs:
  setup-build-publish-deploy:
    name: Setup Build Publish Deploy
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v2

      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          java-version: '17'
          distribution: 'temurin'
          cache: maven

      - name: Build with Maven
        run: mvn clean package -DskipTests

      - name: Set Google Cloud project
        run: echo "PROJECT_ID is $PROJECT_ID"

      - name: Setup Google Cloud CLI
        uses: GoogleCloudPlatform/github-actions/setup-gcloud@0.1.3
        env:
          ACTIONS_ALLOW_UNSECURE_COMMANDS: true
        with:
          service_account_key: ${{ secrets.GKE_SA_KEY }}
          project_id: ${{ env.PROJECT_ID }}

      - name: Authenticate with Google Cloud
        run: |
          echo "$SERVICE_ACCOUNT_KEY" > key.json
          gcloud auth activate-service-account --key-file=key.json
          gcloud config set project $PROJECT_ID
          gcloud container clusters get-credentials $GKE_CLUSTER --region $GKE_ZONE --project $PROJECT_ID
      - name: Configure Docker
        run: gcloud --quiet auth configure-docker

      - name: Build Docker Image
        run: docker build --tag "gcr.io/$PROJECT_ID/$IMAGE:$TAG" .

      - name: Publish Docker Image to GCR
        run: docker push "gcr.io/$PROJECT_ID/$IMAGE:$TAG"

      - name: Install Helm
        run: curl https://raw.githubusercontent.com/helm/helm/master/scripts/get-helm-3 | bash

      - name: Deploy Image to GKE cluster
        run: |
          gcloud components install gke-gcloud-auth-plugin
          gcloud container clusters get-credentials $GKE_CLUSTER \
            --zone $GKE_ZONE \
            --project $PROJECT_ID
          helm upgrade --install $DEPLOYMENT_NAME /home/runner/work/core-wallet-service/core-wallet-service/helm-chart3 \
            --set image.repository=gcr.io/$PROJECT_ID/$IMAGE \
            --set image.tag=$TAG
          kubectl rollout status deployment/$DEPLOYMENT_NAME
          kubectl get services -o wide
